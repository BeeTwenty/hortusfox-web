/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./app/resources/js/app.js":
/*!*********************************!*\
  !*** ./app/resources/js/app.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sass_app_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../sass/app.scss */ \"./app/resources/sass/app.scss\");\n/* harmony import */ var _sass_app_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sass_app_scss__WEBPACK_IMPORTED_MODULE_0__);\n/**\r\n * app.js\r\n * \r\n * Put here your application specific JavaScript implementations\r\n */\r\n\r\n\r\n\r\nwindow.axios = __webpack_require__(/*! axios */ \"./node_modules/axios/dist/browser/axios.cjs\");\r\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\nwindow.constChatMessageQueryRefreshRate = 1000 * 15;\r\nwindow.constChatUserListRefreshRate = 1000 * 15;\r\nwindow.constChatTypingRefreshRate = 2000;\r\n\r\nwindow.vue = new Vue({\r\n    el: '#app',\r\n\r\n    data: {\r\n        bShowAddPlant: false,\r\n        bShowEditText: false,\r\n        bShowEditBoolean: false,\r\n        bShowEditInteger: false,\r\n        bShowEditDate: false,\r\n        bShowEditCombo: false,\r\n        bShowEditPhoto: false,\r\n        bShowEditLinkText: false,\r\n        bShowUploadPhoto: false,\r\n        bShowCreateTask: false,\r\n        bShowEditTask: false,\r\n        bShowEditPreferences: false,\r\n        bShowAddInventoryItem: false,\r\n        bShowEditInventoryItem: false,\r\n        bShowManageGroups: false,\r\n        bShowRestorePassword: false,\r\n        bShowCreateNewUser: false,\r\n        bShowCreateNewLocation: false,\r\n        bShowRemoveLocation: false,\r\n        comboLocation: [],\r\n        comboCuttingMonth: [],\r\n        comboLightLevel: [],\r\n        comboHealthState: [],\r\n        confirmPhotoRemoval: 'Are you sure you want to remove this photo?',\r\n        confirmPlantRemoval: 'Are you sure you want to remove this plant?',\r\n        confirmSetAllWatered: 'Are you sure you want to update the last watered date of all these plants?',\r\n        confirmInventoryItemRemoval: 'Are you sure you want to remove this item?',\r\n        confirmPlantAddHistory: 'Please confirm if you want to do this action.',\r\n        confirmPlantRemoveHistory: 'Please confirm if you want to do this action.',\r\n        newChatMessage: 'New',\r\n        currentlyOnline: 'Currently online: ',\r\n        chatTypingEnable: false,\r\n        chatTypingTimer: null,\r\n        chatTypingHide: null,\r\n        chatTypingCounter: 1\r\n    },\r\n\r\n    methods: {\r\n        ajaxRequest: function (method, url, data = {}, successfunc = function(data){}, finalfunc = function(){}, config = {})\r\n        {\r\n            let func = window.axios.get;\r\n            if (method == 'post') {\r\n                func = window.axios.post;\r\n            } else if (method == 'patch') {\r\n                func = window.axios.patch;\r\n            } else if (method == 'delete') {\r\n                func = window.axios.delete;\r\n            }\r\n\r\n            func(url, data, config)\r\n                .then(function(response){\r\n                    successfunc(response.data);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n                .finally(function(){\r\n                        finalfunc();\r\n                    }\r\n                );\r\n        },\r\n\r\n        initNavBar: function()\r\n        {\r\n            const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\r\n\r\n            if ($navbarBurgers.length > 0) {\r\n                $navbarBurgers.forEach( el => {\r\n                    el.addEventListener('click', () => {\r\n                        const target = el.dataset.target;\r\n                        const $target = document.getElementById(target);\r\n\r\n                        el.classList.toggle('is-active');\r\n                        $target.classList.toggle('is-active');\r\n                    });\r\n                });\r\n            }\r\n        },\r\n\r\n        showEditText: function(plant, property, defval, anchor = '')\r\n        {\r\n            document.getElementById('inpEditTextPlantId').value = plant;\r\n            document.getElementById('inpEditTextAttribute').value = property;\r\n            document.getElementById('inpEditTextValue').value = defval;\r\n            document.getElementById('inpEditTextAnchor').value = anchor;\r\n            window.vue.bShowEditText = true;\r\n        },\r\n\r\n        showEditBoolean: function(plant, property, hint, defval)\r\n        {\r\n            document.getElementById('inpEditBooleanPlantId').value = plant;\r\n            document.getElementById('inpEditBooleanAttribute').value = property;\r\n            document.getElementById('property-hint').innerHTML = hint;\r\n            document.getElementById('inpEditBooleanValue').checked = defval;\r\n            window.vue.bShowEditBoolean = true;\r\n        },\r\n\r\n        showEditInteger: function(plant, property, defval)\r\n        {\r\n            document.getElementById('inpEditIntegerPlantId').value = plant;\r\n            document.getElementById('inpEditIntegerAttribute').value = property;\r\n            document.getElementById('inpEditIntegerValue').value = defval;\r\n            window.vue.bShowEditInteger = true;\r\n        },\r\n\r\n        showEditDate: function(plant, property, defval)\r\n        {\r\n            document.getElementById('inpEditDatePlantId').value = plant;\r\n            document.getElementById('inpEditDateAttribute').value = property;\r\n            document.getElementById('inpEditDateValue').value = defval;\r\n            window.vue.bShowEditDate = true;\r\n        },\r\n\r\n        showEditCombo: function(plant, property, combo, defval)\r\n        {\r\n            document.getElementById('inpEditComboPlantId').value = plant;\r\n            document.getElementById('inpEditComboAttribute').value = property;\r\n            \r\n            if (typeof combo !== 'object') {\r\n                console.error('Invalid combo specified');\r\n                return;\r\n            }\r\n\r\n            let sel = document.getElementById('selEditCombo');\r\n            if (sel) {\r\n                for (let i = sel.options.length - 1; i >= 0; i--) {\r\n                    sel.remove(i);\r\n                }\r\n\r\n                combo.forEach(function(elem, index){\r\n                    let opt = document.createElement('option');\r\n                    opt.value = elem.ident;\r\n                    opt.text = elem.label;\r\n                    sel.add(opt);\r\n                });\r\n            }\r\n\r\n            document.getElementById('selEditCombo').value = defval;\r\n\r\n            window.vue.bShowEditCombo = true;\r\n        },\r\n\r\n        showEditLinkText: function(plant, text, link)\r\n        {\r\n            document.getElementById('inpEditLinkTextPlantId').value = plant;\r\n            document.getElementById('inpEditLinkTextValue').value = text;\r\n            document.getElementById('inpEditLinkTextLink').value = link;\r\n            window.vue.bShowEditLinkText = true;\r\n        },\r\n\r\n        showEditPhoto: function(plant, property)\r\n        {\r\n            document.getElementById('inpEditPhotoPlantId').value = plant;\r\n            document.getElementById('inpEditPhotoAttribute').value = property;\r\n            window.vue.bShowEditPhoto = true;\r\n        },\r\n\r\n        showPhotoUpload: function(plant)\r\n        {\r\n            document.getElementById('inpUploadPhotoPlantId').value = plant;\r\n            window.vue.bShowUploadPhoto = true;\r\n        },\r\n\r\n        deletePhoto: function(photo, plant, target)\r\n        {\r\n            if (!confirm(window.vue.confirmPhotoRemoval)) {\r\n                return;\r\n            }\r\n\r\n            window.vue.ajaxRequest('post', window.location.origin + '/plants/details/gallery/photo/remove', { photo: photo, plant: plant }, function(response){\r\n                if (response.code == 200) {\r\n                    let elem = document.getElementById(target);\r\n                    if (elem) {\r\n                        elem.remove();\r\n                    }\r\n                } else {\r\n                    alert(response.msg);\r\n                }\r\n            });\r\n        },\r\n\r\n        markHistorical: function(plant) {\r\n            if (!confirm(window.vue.confirmPlantAddHistory)) {\r\n                return;\r\n            }\r\n\r\n            location.href = window.location.origin + '/plants/history/add?plant=' + plant;\r\n        },\r\n\r\n        unmarkHistorical: function(plant) {\r\n            if (!confirm(window.vue.confirmPlantRemoveHistory)) {\r\n                return;\r\n            }\r\n\r\n            location.href = window.location.origin + '/plants/history/remove?plant=' + plant;\r\n        },\r\n\r\n        deletePlant: function(plant, retloc)\r\n        {\r\n            if (!confirm(window.vue.confirmPlantRemoval)) {\r\n                return;\r\n            }\r\n\r\n            location.href = window.location.origin + '/plants/remove?plant=' + plant + '&location=' + retloc;\r\n        },\r\n\r\n        toggleTaskStatus: function(id)\r\n        {\r\n            window.vue.ajaxRequest('post', window.location.origin + '/tasks/toggle', { task: id }, function(response){\r\n                if (response.code == 200) {\r\n                    let elem = document.getElementById('task-item-' + id);\r\n                    if (elem) {\r\n                        elem.remove();\r\n                    }\r\n                } else {\r\n                    alert(response.msg);\r\n                }\r\n            });\r\n        },\r\n\r\n        editTask: function(id)\r\n        {\r\n            document.getElementById('inpEditTaskId').value = id;\r\n            document.getElementById('inpEditTaskTitle').value = document.getElementById('task-item-title-' + id).innerText;\r\n            document.getElementById('inpEditTaskDescription').value = document.getElementById('task-item-description-' + id).innerText;\r\n            document.getElementById('inpEditTaskDueDate').value = document.getElementById('task-item-due-' + id).innerText;\r\n\r\n            window.vue.bShowEditTask = true;\r\n        },\r\n\r\n        updateLastWatered: function(id)\r\n        {\r\n            if (!confirm(window.vue.confirmSetAllWatered)) {\r\n                return;\r\n            }\r\n\r\n            location.href = window.location.origin + '/plants/location/' + id + '/water';\r\n        },\r\n\r\n        expandInventoryItem: function(id)\r\n        {\r\n            let elem = document.getElementById(id);\r\n            if (elem) {\r\n                elem.classList.toggle('expand');\r\n            }\r\n        },\r\n\r\n        incrementInventoryItem: function(id, target)\r\n        {\r\n            window.vue.ajaxRequest('get', window.location.origin + '/inventory/amount/increment?id=' + id, {}, function(response) {\r\n                if (response.code == 200) {\r\n                    let elem = document.getElementById(target);\r\n                    if (elem) {\r\n                        elem.innerHTML = response.amount;\r\n\r\n                        if (response.amount == 0) {\r\n                            elem.classList.add('is-inventory-item-empty');\r\n                        } else {\r\n                            elem.classList.remove('is-inventory-item-empty');\r\n                        }\r\n                    }\r\n                } else {\r\n                    alert(response.msg);\r\n                }\r\n            });\r\n        },\r\n\r\n        decrementInventoryItem: function(id, target)\r\n        {\r\n            window.vue.ajaxRequest('get', window.location.origin + '/inventory/amount/decrement?id=' + id, {}, function(response) {\r\n                if (response.code == 200) {\r\n                    let elem = document.getElementById(target);\r\n                    if (elem) {\r\n                        elem.innerHTML = response.amount;\r\n\r\n                        if (response.amount == 0) {\r\n                            elem.classList.add('is-inventory-item-empty');\r\n                        } else {\r\n                            elem.classList.remove('is-inventory-item-empty');\r\n                        }\r\n                    }\r\n                } else {\r\n                    alert(response.msg);\r\n                }\r\n            });\r\n        },\r\n\r\n        editInventoryItem: function(id, name, group, description)\r\n        {\r\n            document.getElementById('inpInventoryItemId').value = id;\r\n            document.getElementById('inpInventoryItemName').value = name;\r\n            document.getElementById('inpInventoryItemGroup').value = group;\r\n            document.getElementById('inpInventoryItemDescription').value = document.getElementById(description).innerText;\r\n\r\n            window.vue.bShowEditInventoryItem = true;\r\n        },\r\n\r\n        deleteInventoryItem: function(id, target)\r\n        {\r\n            if (!confirm(window.vue.confirmInventoryItemRemoval)) {\r\n                return;\r\n            }\r\n\r\n            window.vue.ajaxRequest('get', window.location.origin + '/inventory/remove?id=' + id, {}, function(response) {\r\n                if (response.code == 200) {\r\n                    let elem = document.getElementById(target);\r\n                    if (elem) {\r\n                        elem.remove();\r\n                    }\r\n                } else {\r\n                    alert(response.msg);\r\n                }\r\n            });\r\n        },\r\n\r\n        editInventoryGroupItem: function(id, what, def)\r\n        {\r\n            let input = prompt(what, def);\r\n\r\n            if (input.length > 0) {\r\n                window.vue.ajaxRequest('post', window.location.origin + '/inventory/group/edit', {\r\n                    id: id,\r\n                    what: what,\r\n                    value: input\r\n                }, function(response) {\r\n                    if (response.code == 200) {\r\n                        if (what === 'token') {\r\n                            document.getElementById('inventory-group-elem-token-' + id).innerText = input;\r\n                        } else if (what === 'label') {\r\n                            document.getElementById('inventory-group-elem-label-' + id).innerText = input;\r\n                        }\r\n                    } else {\r\n                        alert(response.msg);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        removeInventoryGroupItem: function(id, target)\r\n        {\r\n            if (!confirm(window.vue.confirmInventoryItemRemoval)) {\r\n                return;\r\n            }\r\n\r\n            window.vue.ajaxRequest('get', window.location.origin + '/inventory/group/remove?id=' + id, {}, function(response) {\r\n                if (response.code == 200) {\r\n                    let elem = document.getElementById(target);\r\n                    if (elem) {\r\n                        elem.remove();\r\n                    }\r\n                } else {\r\n                    alert(response.msg);\r\n                }\r\n            });\r\n        },\r\n\r\n        refreshChat: function(auth_user)\r\n        {\r\n            window.vue.ajaxRequest('get', window.location.origin + '/chat/query', {}, function(response) {\r\n                if (response.code == 200) {\r\n                    response.messages.forEach(function(elem, index) {\r\n                        document.getElementById('chat').innerHTML = window.vue.renderNewChatMessage(elem, auth_user) + document.getElementById('chat').innerHTML;\r\n                    \r\n                        let audio = new Audio(window.location.origin + '/snd/new_message.wav');\r\n                        audio.onloadeddata = function() {\r\n                            audio.play();\r\n                        };\r\n                    });\r\n                }\r\n            });\r\n\r\n            setTimeout(window.vue.refreshChat, window.constChatMessageQueryRefreshRate);\r\n        },\r\n\r\n        renderNewChatMessage: function(elem, auth_user)\r\n        {\r\n            let chatmsgright = '';\r\n            if (elem.userId == auth_user) {\r\n                chatmsgright = 'chat-message-right';\r\n            }\r\n\r\n            let html = `\r\n                <div class=\"chat-message ` + chatmsgright + `\">\r\n                    <div class=\"chat-message-user\">\r\n                        <div class=\"is-inline-block\" style=\"color: ` + elem.chatcolor + `;\">` + elem.userName + `</div>\r\n                        <div class=\"chat-message-new\">` + window.vue.newChatMessage + `</div>\r\n                    </div>\r\n\r\n                    <div class=\"chat-message-content\">\r\n                        <pre>` + elem.message + `</pre>\r\n                    </div>\r\n\r\n                    <div class=\"chat-message-info\">\r\n                        ` + elem.diffForHumans + `\r\n                    </div>\r\n                </div>\r\n            `;\r\n\r\n            return html;\r\n        },\r\n\r\n        refreshUserList: function()\r\n        {\r\n            window.vue.ajaxRequest('get', window.location.origin + '/chat/user/online', {}, function(response) {\r\n                if (response.code == 200) {\r\n                    let target = document.getElementById('chat-user-list');\r\n                    target.innerHTML = window.vue.currentlyOnline;\r\n\r\n                    response.users.forEach(function(elem, index) {\r\n                        let comma = '';\r\n                        if (index < response.users.length - 1) {\r\n                            comma = ', ';\r\n                        }\r\n                        \r\n                        target.innerHTML += elem.name + comma;\r\n                    });\r\n                }\r\n            });\r\n\r\n            setTimeout(window.vue.refreshUserList, window.constChatUserListRefreshRate);\r\n        },\r\n\r\n        refreshTypingStatus: function()\r\n        {\r\n            if (!window.vue.chatTypingEnable) {\r\n                return;\r\n            }\r\n\r\n            window.vue.ajaxRequest('get', window.location.origin + '/chat/typing/update', {}, function(response){\r\n                if (response.code != 200) {\r\n                    console.error(response.msg);\r\n                }\r\n            });\r\n\r\n            setTimeout(function(){\r\n                window.vue.chatTypingTimer = null;\r\n            }, 5000);\r\n        },\r\n\r\n        handleChatInput: function()\r\n        {\r\n            if (!window.vue.chatTypingTimer) {\r\n                window.vue.chatTypingTimer = setTimeout(function(){\r\n                    window.vue.refreshTypingStatus();\r\n                }, 1000);\r\n            }\r\n        },\r\n\r\n        handleTypingIndicator: function()\r\n        {\r\n            window.vue.ajaxRequest('get', window.location.origin + '/chat/typing', {}, function(response){\r\n                if (response.code == 200) {\r\n                    if (response.status) {\r\n                        let elem = document.getElementsByClassName('chat-typing-indicator')[0];\r\n                        elem.style.display = 'block';\r\n\r\n                        window.vue.chatTypingHide = setTimeout(window.vue.hideChatTypingIndicator, 6550);\r\n                    }\r\n                }\r\n            });\r\n\r\n            setTimeout(window.vue.handleTypingIndicator, window.constChatTypingRefreshRate);\r\n        },\r\n\r\n        hideChatTypingIndicator: function()\r\n        {\r\n            if (window.vue.chatTypingHide !== null) {\r\n                let elem = document.getElementsByClassName('chat-typing-indicator')[0];\r\n                elem.style.display = 'none';\r\n\r\n                window.vue.chatTypingHide = null;\r\n            }\r\n        },\r\n\r\n        animateChatTypingIndicator: function()\r\n        {\r\n            let indicator = document.getElementsByClassName('chat-typing-indicator')[0];\r\n            if (indicator.style.display === 'block') {\r\n                window.vue.removePreviousChatIndicatorCircleStyle();\r\n\r\n                let elem = document.getElementById('chat-typing-circle-' + window.vue.chatTypingCounter.toString());\r\n                elem.style.color = 'rgb(50, 50, 50)';\r\n                elem.classList.add('fa-lg');\r\n\r\n                window.vue.chatTypingCounter++;\r\n                if (window.vue.chatTypingCounter > 3) {\r\n                    window.vue.chatTypingCounter = 1;\r\n                }\r\n            }\r\n\r\n            setTimeout(window.vue.animateChatTypingIndicator, 350);\r\n        },\r\n\r\n        removePreviousChatIndicatorCircleStyle: function()\r\n        {\r\n            let previous = window.vue.chatTypingCounter - 1;\r\n            if (previous == 0) {\r\n                previous = 3;\r\n            }\r\n\r\n            let elem = document.getElementById('chat-typing-circle-' + previous.toString());\r\n            if (elem.classList.contains('fa-lg')) {\r\n                elem.classList.remove('fa-lg');\r\n                elem.style.color = 'inherit';\r\n            }\r\n        },\r\n\r\n        textFilterElements: function(token) {\r\n            let elems = document.getElementsByClassName('plant-card-title');\r\n            for (let i = 0; i < elems.length; i++) {\r\n                let target = elems[i].parentNode;\r\n                \r\n                while (!target.classList.contains('plant-card')) {\r\n                    target = target.parentNode;\r\n                }\r\n\r\n                if (!elems[i].innerText.toLowerCase().includes(token.toLowerCase())) {\r\n                    target.classList.add('is-hidden');\r\n                } else {\r\n                    target.classList.remove('is-hidden');\r\n                }\r\n            }\r\n        },\r\n\r\n        toggleDropdown: function(elem) {\r\n            if (elem.classList.contains('is-active')) {\r\n                elem.classList.remove('is-active');\r\n            } else {\r\n                elem.classList.add('is-active');\r\n            }\r\n        },\r\n\r\n        selectAdminTab: function(tab) {\r\n            const tabs = ['environment', 'media', 'users', 'locations', 'mail', 'info'];\r\n\r\n            let selEl = document.querySelector('.admin-' + tab);\r\n            if (selEl) {\r\n                tabs.forEach(function(elem, index) {\r\n                    let otherEl = document.querySelector('.admin-' + elem);\r\n                    if (otherEl) {\r\n                        otherEl.classList.add('is-hidden');\r\n                    }\r\n\r\n                    let otherTabs = document.querySelector('.admin-tab-' + elem);\r\n                    if (otherTabs) {\r\n                        otherTabs.classList.remove('is-active');\r\n                    }\r\n                });\r\n\r\n                selEl.classList.remove('is-hidden');\r\n\r\n                let selTab = document.querySelector('.admin-tab-' + tab);\r\n                if (selTab) {\r\n                    selTab.classList.add('is-active');\r\n                }\r\n            }\r\n        },\r\n    }\r\n});\n\n//# sourceURL=webpack://asatruphp/./app/resources/js/app.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./app/resources/sass/app.scss":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./app/resources/sass/app.scss ***!
  \******************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n    app.scss\\n*/\\nhtml, body {\\n  width: 100%;\\n  height: 100%;\\n  padding: 0;\\n  margin: 0;\\n  background-color: rgb(10, 10, 10);\\n}\\n\\nbody {\\n  overflow-x: hidden;\\n}\\n\\n.is-image-container {\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  padding: unset;\\n}\\n\\n.column-overlay {\\n  width: 100%;\\n  height: 100%;\\n  padding: 20px;\\n  background-color: rgba(0, 0, 0, 0.5);\\n}\\n\\nh1 {\\n  font-size: 2.5em;\\n  color: rgb(250, 250, 250);\\n}\\n\\nh2 {\\n  font-size: 2em;\\n  margin-bottom: 30px;\\n  color: rgb(200, 200, 200);\\n}\\n\\n.smaller-headline {\\n  font-size: 1.2em;\\n  margin-bottom: 15px;\\n}\\n\\n.is-default-link {\\n  color: rgb(79, 134, 202);\\n}\\n\\n.is-default-link:hover {\\n  color: rgb(79, 134, 202);\\n  text-decoration: underline;\\n}\\n\\n.is-yellow-link {\\n  color: rgb(156, 115, 67);\\n}\\n\\n.is-yellow-link:hover {\\n  color: rgb(156, 115, 67);\\n  text-decoration: underline;\\n}\\n\\n.is-fixed-button-link {\\n  position: relative;\\n  top: 5px;\\n}\\n\\n.is-default-text-color {\\n  color: rgb(150, 150, 150);\\n}\\n\\n.is-color-darker {\\n  color: rgb(100, 100, 100);\\n}\\n\\n.is-input-dark {\\n  background-color: rgba(90, 90, 90, 0.5);\\n  color: rgb(200, 200, 200);\\n  border: 1px solid rgb(100, 100, 100);\\n}\\n\\n.is-action-button-margin {\\n  margin-right: 10px;\\n  margin-bottom: 10px;\\n}\\n@media screen and (max-width: 376px) {\\n  .is-action-button-margin {\\n    margin-right: 15px;\\n  }\\n}\\n\\n.is-underlined {\\n  text-decoration: underline;\\n}\\n\\n.is-stretched {\\n  width: 100%;\\n}\\n\\n.is-pointer {\\n  cursor: pointer;\\n}\\n\\n.float-right {\\n  float: right;\\n}\\n\\n.navbar-item a {\\n  color: rgb(200, 200, 200);\\n}\\n\\n.navbar-item a:hover {\\n  color: rgb(250, 250, 250);\\n}\\n\\na.navbar-item:hover, a.navbar-item.is-active, .navbar-link:hover, .navbar-link.is-active {\\n  background-color: rgba(255, 255, 255, 0) !important;\\n  color: rgb(180, 180, 180) !important;\\n}\\n\\n.navbar-item, .navbar-burger, .navbar-link {\\n  color: rgb(190, 190, 190);\\n}\\n\\n.navbar-dropdown {\\n  background-color: rgb(50, 50, 48);\\n  padding-top: unset;\\n}\\n\\n.navbar-item.has-dropdown:hover .navbar-link, .navbar-item.has-dropdown.is-active .navbar-link {\\n  background-color: rgba(0, 0, 0, 0);\\n}\\n\\n@media screen and (max-width: 1087px) {\\n  .navbar-menu {\\n    background-color: rgb(50, 50, 48);\\n  }\\n}\\na.navbar-burger:hover {\\n  color: rgb(200, 200, 200);\\n}\\n\\n@media screen and (min-width: 1088px) {\\n  .navbar-start {\\n    flex-grow: 1;\\n    justify-content: center;\\n  }\\n}\\n\\n@media screen and (min-width: 1089px) {\\n  .navbar-item-only-mobile {\\n    display: none;\\n  }\\n}\\n\\n@media screen and (min-width: 1089px) {\\n  .navbar-dropdown-minwidth {\\n    display: block;\\n    top: 5px;\\n    min-width: 135px;\\n    text-align: center;\\n  }\\n}\\n\\n@media screen and (min-width: 1089px) {\\n  .navbar-dropdown-minwidth:not(.is-multiple):not(.is-loading)::after {\\n    top: 20px !important;\\n  }\\n}\\n\\nfieldset legend {\\n  margin-bottom: 5px !important;\\n}\\n\\nfieldset .field {\\n  margin-bottom: unset !important;\\n}\\n\\n.notification-badge {\\n  color: rgb(255, 255, 255);\\n  text-decoration: none;\\n  border-radius: 2px;\\n}\\n\\n.notification-badge .notify-badge {\\n  padding: 1px 7px;\\n  border-radius: 50%;\\n  background: rgb(255, 0, 0);\\n  color: rgb(255, 255, 255);\\n  font-size: 0.8em;\\n}\\n@media screen and (min-width: 1089px) {\\n  .notification-badge .notify-badge {\\n    position: absolute;\\n    right: -5px;\\n    top: 4px;\\n  }\\n}\\n@media screen and (max-width: 1087px) {\\n  .notification-badge .notify-badge {\\n    position: relative;\\n    right: -4px;\\n    top: -10px;\\n  }\\n}\\n\\n.notify-badge .notify-badge-count {\\n  position: relative;\\n  top: -2px;\\n}\\n\\n.locations {\\n  text-align: center;\\n}\\n\\n.locations a {\\n  color: rgb(100, 100, 100);\\n}\\n\\n.locations a:hover {\\n  color: rgb(100, 100, 100);\\n}\\n\\n.location {\\n  position: relative;\\n  display: inline-block;\\n  width: 250px;\\n  height: 230px;\\n  margin-left: 10px;\\n  margin-right: 10px;\\n  margin-bottom: 23px;\\n  background-color: rgba(159, 172, 132, 0.2);\\n  border: 1px solid rgb(80, 80, 80);\\n}\\n@media screen and (max-width: 830px) {\\n  .location {\\n    width: 134px;\\n    height: 108px;\\n  }\\n}\\n\\n.location:hover {\\n  background-color: rgba(159, 172, 132, 0.35);\\n}\\n\\n.location-title {\\n  text-align: center;\\n  font-size: 2em;\\n  padding-bottom: 4px;\\n  margin-bottom: 20px;\\n  background-color: rgba(115, 143, 100, 0.9);\\n  color: #c3e4a3;\\n}\\n@media screen and (max-width: 830px) {\\n  .location-title {\\n    font-size: 1em;\\n    padding-top: 2px;\\n    padding-bottom: 5px;\\n  }\\n}\\n@media screen and (min-width: 831px) {\\n  .location-title {\\n    padding-bottom: 10px;\\n  }\\n}\\n\\n.location-icon {\\n  text-align: center;\\n}\\n\\n.location-icon i {\\n  color: #99ac97;\\n  font-size: 5em;\\n}\\n@media screen and (max-width: 830px) {\\n  .location-icon i {\\n    font-size: 2em;\\n  }\\n}\\n@media screen and (min-width: 831px) {\\n  .location-icon i {\\n    margin-top: 25px;\\n  }\\n}\\n\\n.last-added-or-authored-plants {\\n  margin-top: 20px;\\n  margin-bottom: 40px;\\n  margin-left: -20px;\\n  margin-right: -20px;\\n  padding-bottom: 5px;\\n  background-color: rgba(150, 150, 150, 0.3);\\n  text-align: center;\\n}\\n\\n.last-added-or-authored-plants h3 {\\n  padding-top: 15px;\\n  font-size: 2em;\\n  color: rgb(150, 150, 150);\\n}\\n\\n.margin-vertical {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n}\\n\\n.margin-bottom {\\n  margin-bottom: 20px;\\n}\\n\\n.sorting {\\n  position: relative;\\n  top: 10px;\\n  margin-left: 10px;\\n}\\n\\n.sorting-control {\\n  position: relative;\\n  display: inline-block;\\n  margin-bottom: 10px;\\n}\\n\\n.sorting-control select, .sorting-control input[type=text] {\\n  color: rgb(200, 200, 200);\\n  background-color: rgba(50, 50, 50, 0.9);\\n  border: 1px solid rgb(100, 100, 100);\\n  margin-right: 5px;\\n}\\n\\n.sorting-control input[type=text] {\\n  height: 27px;\\n  border-radius: 290486px;\\n  padding-left: 1em;\\n}\\n\\n.select:not(.is-multiple):not(.is-loading)::after {\\n  border-color: rgb(50, 115, 220) !important;\\n}\\n\\n.plants {\\n  margin-top: 30px;\\n}\\n@media screen and (max-width: 552px) {\\n  .plants {\\n    text-align: center;\\n  }\\n}\\n\\n.plants-empty {\\n  position: relative;\\n  margin-top: 50px;\\n  text-align: center;\\n}\\n\\n.plants-empty-image img {\\n  width: 256px;\\n  height: 256px;\\n}\\n\\n.plants-empty-text {\\n  position: relative;\\n  top: -20px;\\n  color: rgb(150, 150, 150);\\n  font-style: italic;\\n  font-size: 1.4em;\\n}\\n\\n.plant-card {\\n  position: relative;\\n  display: inline-block;\\n  width: 265px;\\n  height: 398px;\\n  margin-left: 10px;\\n  margin-right: 10px;\\n  margin-bottom: 20px;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3);\\n}\\n@media screen and (max-width: 552px) {\\n  .plant-card {\\n    width: 145px;\\n    height: 257px;\\n  }\\n}\\n\\n.plant-card:hover {\\n  box-shadow: 0 0 20px 0 rgba(105, 165, 85, 0.95);\\n}\\n\\n.plant-card-overlay {\\n  width: 100%;\\n  height: 100%;\\n  background: transparent;\\n  border-radius: 10px;\\n}\\n\\n.plant-card-overlay:hover {\\n  background-color: rgba(0, 0, 0, 0.05);\\n}\\n\\n.plant-card-title {\\n  position: absolute;\\n  bottom: 0;\\n  z-index: 2;\\n  width: 100%;\\n  height: 69px;\\n  padding-top: 17px;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  color: rgb(200, 200, 200);\\n  text-align: center;\\n  font-size: 1.2em;\\n  border-bottom-left-radius: 10px;\\n  border-bottom-right-radius: 10px;\\n}\\n@media screen and (max-width: 552px) {\\n  .plant-card-title {\\n    padding-top: 22px;\\n    font-size: 0.9em;\\n  }\\n}\\n\\n.plant-card-title-with-hint {\\n  padding-top: 7px;\\n}\\n\\n.plant-card-title-second {\\n  color: rgb(150, 150, 150);\\n  font-size: 0.8em;\\n}\\n\\n.plant-card-health-state, .plant-card-options {\\n  position: absolute;\\n  top: 7px;\\n  right: 8px;\\n  z-index: 2;\\n}\\n\\n.plant-card-options {\\n  color: rgb(200, 200, 200);\\n}\\n\\n.plant-card-health-state i {\\n  background-color: rgba(0, 0, 0, 0.5);\\n  padding: 5px;\\n  border-radius: 32%;\\n}\\n\\n@media screen and (min-width: 520px) {\\n  .plant-column {\\n    padding: 20px;\\n  }\\n}\\n@media screen and (max-width: 520px) {\\n  .plant-column {\\n    display: inline-block;\\n    width: 100%;\\n    padding-left: 15px;\\n    padding-right: 15px;\\n  }\\n}\\n@media screen and (max-width: 365px) {\\n  .plant-column {\\n    display: inline-block;\\n    padding-left: unset;\\n    padding-right: unset;\\n  }\\n}\\n\\n.plant-column table {\\n  width: 100%;\\n  color: rgb(200, 200, 200);\\n}\\n\\n.plant-column table strong {\\n  color: rgb(200, 200, 200);\\n}\\n\\n.plant-column thead {\\n  background-color: rgba(104, 145, 194, 0.5);\\n}\\n\\n.plant-column table td {\\n  border: 1px solid rgb(200, 200, 200);\\n  padding: 10px;\\n}\\n\\n.plant-details-title {\\n  position: relative;\\n}\\n\\n.plant-details-title h1 {\\n  display: inline-block;\\n}\\n\\n.plant-details-title h2 {\\n  position: relative;\\n  display: inline-block;\\n  top: 14px;\\n  font-size: 1.5em;\\n  color: rgb(100, 100, 100);\\n  float: right;\\n}\\n\\n.is-color-yes {\\n  color: rgb(115, 214, 103);\\n}\\n\\n.is-color-no {\\n  color: rgb(212, 67, 67);\\n}\\n\\n.is-not-available {\\n  color: rgb(100, 100, 100);\\n  font-style: italic;\\n}\\n\\n.plant-notes {\\n  position: relative;\\n  width: 100%;\\n  min-width: 300px;\\n  min-height: 75px;\\n  padding: 10px;\\n  color: rgb(200, 200, 200);\\n  background-color: rgba(90, 90, 90, 0.5);\\n  font-size: 1em;\\n  border: 1px solid rgb(100, 100, 100);\\n  border-left: 3px solid rgb(163, 122, 61);\\n  border-radius: 4px;\\n}\\n\\n.plant-notes-content {\\n  position: relative;\\n  display: inline-block;\\n  width: 90%;\\n}\\n\\n.plant-notes-edit {\\n  position: relative;\\n  display: inline-block;\\n  float: right;\\n}\\n\\n.plant-photo {\\n  position: relative;\\n  width: 345px;\\n  height: 543px;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  float: right;\\n}\\n\\n.plant-photo-overlay {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.plant-photo-overlay:hover {\\n  background-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.plant-photo-overlay .plant-photo-edit {\\n  visibility: hidden;\\n}\\n\\n.plant-photo-overlay:hover .plant-photo-edit {\\n  visibility: visible;\\n}\\n\\n.plant-photo-edit {\\n  position: absolute;\\n  top: 43%;\\n  left: 42%;\\n}\\n\\n.plant-photo-edit i {\\n  color: rgb(200, 200, 200);\\n}\\n\\n.plant-state-in-good-standing {\\n  color: rgb(115, 214, 103);\\n}\\n\\n.plant-state-overwatered {\\n  color: rgb(54, 105, 201);\\n}\\n\\n.plant-state-withering {\\n  color: rgb(156, 115, 67);\\n}\\n\\n.plant-state-infected {\\n  color: rgb(173, 86, 86);\\n}\\n\\n.plant-warning {\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n  color: rgb(212, 50, 50);\\n}\\n@media screen and (max-width: 510px) {\\n  .plant-warning {\\n    margin-bottom: 30px;\\n  }\\n}\\n\\n.warning-plants {\\n  position: relative;\\n  width: 100%;\\n  margin-top: 20px;\\n  margin-bottom: 45px;\\n  padding: 0 15px 15px 15px;\\n  border: 1px solid rgb(100, 100, 100);\\n  border-radius: 4px;\\n}\\n\\n.has-warnings {\\n  background-color: rgba(123, 50, 50, 0.5);\\n}\\n\\n.is-all-ok {\\n  background-color: rgba(50, 123, 56, 0.5);\\n}\\n\\n.warning-plants-title {\\n  margin-top: 20px;\\n  margin-bottom: 10px;\\n  font-size: 1.3em;\\n  color: rgb(200, 200, 200);\\n}\\n\\n.warning-plants-title-no-margin-bottom {\\n  margin-bottom: unset;\\n}\\n\\n.warning-plants-title-margin-top-25 {\\n  margin-top: 25px;\\n}\\n\\n.warning-plants-title-centered {\\n  text-align: center;\\n}\\n\\n.warning-plants-item {\\n  color: rgb(150, 150, 150);\\n  margin-bottom: 10px;\\n}\\n\\n.history-years {\\n  position: relative;\\n  margin-top: 30px;\\n  margin-bottom: 40px;\\n  margin-left: 10px;\\n}\\n\\n.history-year {\\n  position: relative;\\n  display: inline-block;\\n  margin-right: 5px;\\n  margin-bottom: 20px;\\n}\\n\\n.history-year a {\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n  padding-left: 20px;\\n  padding-right: 20px;\\n  color: rgb(30, 30, 30);\\n  background-color: rgba(200, 200, 200, 0.5);\\n  border: 1px solid rgb(150, 150, 150);\\n  border-radius: 20px;\\n}\\n\\n.history-year a:hover {\\n  color: rgb(30, 30, 30);\\n  background-color: rgba(200, 200, 200, 0.7);\\n}\\n\\n.overdue-tasks {\\n  position: relative;\\n  width: 100%;\\n  margin-top: -10px;\\n  margin-bottom: 45px;\\n  padding: 0 15px 15px 15px;\\n  background-color: rgba(123, 50, 50, 0.5);\\n  border: 1px solid rgb(100, 100, 100);\\n  border-radius: 4px;\\n}\\n\\n.overdue-tasks-title {\\n  margin-top: 20px;\\n  margin-bottom: 10px;\\n  font-size: 1.3em;\\n  color: rgb(200, 200, 200);\\n}\\n\\n.overdue-tasks-item {\\n  color: rgb(150, 150, 150);\\n  margin-bottom: 10px;\\n}\\n\\n.log {\\n  position: relative;\\n  width: 100%;\\n  margin-top: 23px;\\n  margin-bottom: 45px;\\n  padding: 0 15px 15px 15px;\\n  border: 1px solid rgb(43, 43, 43);\\n  background-color: rgb(0, 0, 0);\\n  border-radius: 4px;\\n}\\n\\n.log-title {\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n  font-size: 1.3em;\\n  color: rgb(0, 215, 63);\\n}\\n\\n.log-content {\\n  max-height: 200px;\\n  overflow-y: auto;\\n}\\n\\n.log-item {\\n  color: rgb(150, 150, 150);\\n  margin-bottom: 10px;\\n}\\n\\n.plant-gallery {\\n  position: relative;\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n.plant-gallery-title {\\n  margin-bottom: 20px;\\n  font-size: 1.5em;\\n  color: rgb(150, 150, 150);\\n}\\n\\n.plant-gallery-upload {\\n  margin-bottom: 20px;\\n}\\n\\n.plant-gallery-photos {\\n  margin-top: 30px;\\n}\\n\\n.plant-gallery-photos strong {\\n  color: rgb(100, 100, 100);\\n}\\n\\n.plant-gallery-item {\\n  position: relative;\\n  display: inline-block;\\n  width: 315px;\\n  height: auto;\\n  margin-left: 10px;\\n  margin-right: 10px;\\n  margin-bottom: 30px;\\n  background-color: rgba(50, 50, 50, 0.8);\\n  border-radius: 4px;\\n}\\n\\n.plant-gallery-item-header {\\n  padding: 10px;\\n}\\n\\n.plant-gallery-item-header-label {\\n  display: inline-block;\\n  color: rgb(200, 200, 200);\\n}\\n\\n.plant-gallery-item-header-action {\\n  display: inline-block;\\n  float: right;\\n}\\n\\n.plant-gallery-item-header-action i {\\n  color: rgb(173, 86, 86);\\n}\\n\\n.plant-gallery-item-header-action i:hover {\\n  color: rgb(173, 90, 90);\\n}\\n\\n.plant-gallery-item-photo {\\n  position: relative;\\n}\\n\\n.plant-gallery-item-photo-overlay {\\n  position: absolute;\\n  z-index: 2;\\n  width: 100%;\\n  height: 98%;\\n}\\n\\n.plant-gallery-item-photo-overlay:hover {\\n  background-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.plant-gallery-item-photo-overlay .plant-gallery-item-photo-image {\\n  visibility: hidden;\\n}\\n\\n.plant-gallery-item-photo-overlay:hover .plant-gallery-item-photo-image {\\n  visibility: visible;\\n}\\n\\n.plant-gallery-item-footer {\\n  position: relative;\\n  top: -3px;\\n  padding: 10px;\\n  color: rgb(100, 100, 100);\\n}\\n\\n.stats {\\n  position: relative;\\n  margin-top: 10px;\\n  margin-bottom: 25px;\\n  text-align: center;\\n}\\n\\n.stats-item {\\n  position: relative;\\n  display: inline-block;\\n  width: 194px;\\n  height: 135px;\\n  margin-left: 10px;\\n  margin-right: 10px;\\n  margin-bottom: 20px;\\n  padding: 20px;\\n  background-color: rgba(150, 150, 150, 0.3);\\n  border: 1px solid rgb(200, 200, 200);\\n  border-radius: 4px;\\n  border-left: 3px solid rgb(159, 165, 45);\\n}\\n@media screen and (max-width: 512px) {\\n  .stats-item {\\n    width: 149px;\\n  }\\n}\\n\\n.stats-item-count {\\n  color: rgb(250, 250, 250);\\n  font-size: 2em;\\n  text-align: center;\\n}\\n\\n.stats-item-label {\\n  color: rgb(200, 200, 200);\\n  font-size: 1.4em;\\n  text-align: center;\\n}\\n\\n.plant-tags {\\n  position: relative;\\n}\\n\\n.plant-tags-content {\\n  position: relative;\\n  display: inline-block;\\n  width: 90%;\\n}\\n\\n.plant-tags-edit {\\n  position: relative;\\n  display: inline-block;\\n  float: right;\\n}\\n\\n.plant-tags-item {\\n  position: relative;\\n  display: inline-block;\\n  min-width: 90px;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  padding-top: 5px;\\n  padding-bottom: 9px;\\n  margin-left: 5px;\\n  margin-right: 5px;\\n  margin-bottom: 16px;\\n  text-align: center;\\n  background-color: rgba(200, 200, 200, 0.3);\\n  border: 1px solid rgb(150, 150, 150);\\n  border-radius: 10px;\\n}\\n\\n.plant-tags-item:hover {\\n  background-color: rgba(200, 200, 200, 0.5);\\n}\\n\\n.plant-tags-item a {\\n  color: rgb(190, 190, 190);\\n}\\n\\n.plant-tags-item a:hover {\\n  color: rgb(230, 230, 230);\\n}\\n\\n.tasks {\\n  margin-bottom: 50px;\\n}\\n\\n.task {\\n  position: relative;\\n  display: inline-block;\\n  width: 45%;\\n  height: auto;\\n  margin-left: 10px;\\n  margin-right: 10px;\\n  margin-bottom: 29px;\\n  background-color: rgba(50, 50, 50, 0.76);\\n  border: 1px solid rgb(80, 80, 80);\\n  border-radius: 4px;\\n}\\n@media screen and (max-width: 580px) {\\n  .task {\\n    width: 95%;\\n  }\\n}\\n\\n.task-header {\\n  position: relative;\\n  width: 100%;\\n  height: 50px;\\n  padding: 10px;\\n  border-top-left-radius: 4px;\\n  border-top-right-radius: 4px;\\n  background-color: rgb(25, 25, 25);\\n}\\n\\n.task-header-title {\\n  position: relative;\\n  display: inline-block;\\n  font-size: 1.2em;\\n  color: rgb(200, 200, 200);\\n}\\n\\n.task-header-action {\\n  position: relative;\\n  display: inline-block;\\n  float: right;\\n}\\n\\n.task-header-action a {\\n  color: rgb(150, 150, 150);\\n}\\n\\n.task-description {\\n  position: relative;\\n  height: 150px;\\n  margin-bottom: 43px;\\n  padding: 10px;\\n  font-size: 1em;\\n  color: rgb(150, 150, 150);\\n  overflow-y: auto;\\n}\\n\\n.task-description pre {\\n  background-color: inherit;\\n  color: inherit;\\n  white-space: pre-wrap;\\n  word-wrap: break-word;\\n}\\n\\n.task-footer {\\n  position: absolute;\\n  bottom: 0;\\n  padding: 10px;\\n  width: 100%;\\n  background-color: rgb(10, 10, 10);\\n  border-bottom-left-radius: 4px;\\n  border-bottom-right-radius: 4px;\\n  font-size: 0.8em;\\n}\\n\\n.task-footer-date {\\n  position: relative;\\n  display: inline-block;\\n  width: 43%;\\n}\\n\\n.task-footer-due {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n.is-task-overdue {\\n  color: rgb(212, 50, 50);\\n}\\n\\n.task-footer-action {\\n  position: relative;\\n  display: inline-block;\\n  float: right;\\n}\\n\\n.task-footer-action a {\\n  color: rgb(150, 150, 150);\\n}\\n\\n.tasks-all-done {\\n  position: relative;\\n  margin-top: 30px;\\n  text-align: center;\\n}\\n\\n.tasks-all-done-image img {\\n  width: 256px;\\n  height: 256px;\\n}\\n\\n.tasks-all-done-text {\\n  color: rgb(120, 215, 105);\\n  font-size: 2em;\\n}\\n\\n.inventory {\\n  margin-bottom: 50px;\\n}\\n\\n.inventory-item-group {\\n  position: relative;\\n  width: 100%;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n  background-color: rgba(200, 200, 200, 0.76);\\n  border: 1px solid rgb(90, 90, 90);\\n}\\n\\n.inventory-item {\\n  position: relative;\\n  width: 100%;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n  background-color: rgba(50, 50, 50, 0.76);\\n  border: 1px solid rgb(90, 90, 90);\\n}\\n\\n.inventory-item-header {\\n  position: relative;\\n}\\n\\n.inventory-item-name {\\n  position: relative;\\n  display: inline-block;\\n  min-width: 50%;\\n}\\n\\n.inventory-item-name a {\\n  color: rgb(150, 150, 150);\\n}\\n\\n.inventory-item-name a:hover {\\n  color: rgb(150, 150, 150);\\n}\\n\\n.inventory-item-amount {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n.inventory-item-amount i {\\n  color: rgb(150, 150, 150);\\n}\\n\\n.inventory-item-amount span {\\n  color: rgb(215, 215, 215);\\n}\\n\\n.is-inventory-item-empty {\\n  color: rgb(212, 50, 50) !important;\\n}\\n\\n.inventory-item-actions {\\n  position: relative;\\n  display: inline-block;\\n  float: right;\\n}\\n\\n.inventory-item-actions i {\\n  color: rgb(100, 100, 100);\\n}\\n\\n.inventory-item-body {\\n  position: relative;\\n  height: 0;\\n  opacity: 0;\\n  overflow: hidden;\\n  -webkit-transition: opacity 1s ease-out;\\n  -moz-transition: opacity 1s ease-out;\\n  transition: opacity 1s ease-out;\\n}\\n\\n.inventory-item-body.expand {\\n  height: auto;\\n  opacity: 1;\\n}\\n\\n.inventory-item-description {\\n  position: relative;\\n  color: rgb(100, 100, 100);\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n.inventory-item-description pre {\\n  background-color: inherit;\\n  color: inherit;\\n  white-space: normal;\\n}\\n\\n.inventory-item-photo {\\n  position: relative;\\n  text-align: center;\\n}\\n\\n.inventory-item-author {\\n  position: relative;\\n  color: rgb(100, 100, 100);\\n  margin-top: 10px;\\n}\\n\\n.inventory-groups {\\n  width: 100%;\\n}\\n\\n.inventory-groups a {\\n  color: rgb(50, 50, 50);\\n}\\n\\n.inventory-groups a:hover {\\n  color: rgb(50, 50, 50);\\n  text-decoration: underline;\\n}\\n\\n.chat-message {\\n  position: relative;\\n  width: 90%;\\n  padding: 15px;\\n  margin-bottom: 20px;\\n  background-color: rgba(200, 200, 200, 0.5);\\n  border-radius: 10px;\\n}\\n\\n.chat-message-right {\\n  margin-left: 10%;\\n  background-color: rgba(115, 143, 100, 0.9);\\n}\\n\\n.chat-message-user {\\n  position: relative;\\n  font-size: 1.2em;\\n  margin-bottom: 10px;\\n}\\n\\n.chat-message-new {\\n  position: relative;\\n  display: inline-block;\\n  background-color: rgb(212, 130, 67);\\n  border: 1px solid rgb(92, 64, 25);\\n  color: rgb(250, 250, 250);\\n  border-radius: 4px;\\n  padding: 5px;\\n  font-size: 0.5em;\\n  text-transform: uppercase;\\n  float: right;\\n}\\n\\n.chat-message-content {\\n  position: relative;\\n}\\n\\n.chat-message-content pre {\\n  background-color: transparent;\\n  color: rgb(255, 255, 255);\\n}\\n\\n.chat-message-info {\\n  position: relative;\\n  margin-top: 10px;\\n  font-size: 0.76em;\\n  color: rgb(155, 155, 155);\\n}\\n\\n.chat-typing-indicator {\\n  display: none;\\n  background-color: rgba(50, 50, 50, 0.5);\\n}\\n\\n.chat-typing-indicator.visible {\\n  display: block;\\n}\\n\\n.chat-user-list {\\n  position: relative;\\n  margin-top: 10px;\\n  margin-bottom: 23px;\\n  color: rgb(92, 255, 0);\\n}\\n\\n.scroll-to-top {\\n  position: fixed;\\n  z-index: 3;\\n  bottom: 12px;\\n  right: 12px;\\n}\\n\\n.scroll-to-top-inner {\\n  background-color: rgb(52, 70, 56);\\n  border-radius: 50%;\\n  padding: 12px;\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\n.scroll-to-top-inner a {\\n  color: rgb(200, 200, 200);\\n}\\n\\n.auth-main {\\n  width: 100%;\\n  height: 100%;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n}\\n\\n.auth-overlay {\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.auth-content {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  text-align: center;\\n  padding: 20px;\\n}\\n\\n.auth-header {\\n  position: relative;\\n  margin-bottom: 20px;\\n}\\n\\n.auth-header img {\\n  position: relative;\\n  width: 128px;\\n  height: 128px;\\n  border-radius: 50%;\\n}\\n\\n.auth-header h1 {\\n  font-size: 2.5em;\\n  font-family: Quicksand, Verdana, Geneva, Tahoma, sans-serif;\\n  font-weight: bold;\\n  color: rgb(150, 150, 150);\\n}\\n\\n.auth-info {\\n  position: relative;\\n  margin-bottom: 43px;\\n}\\n\\n.auth-info-error {\\n  color: rgb(154, 73, 69);\\n}\\n\\n.auth-info-success {\\n  color: rgb(69, 154, 83);\\n}\\n\\n.auth-form {\\n  position: relative;\\n}\\n\\n.auth-form input[type=email], .auth-form input[type=password] {\\n  color: rgb(150, 150, 150);\\n  background-color: rgb(50, 50, 50);\\n}\\n\\n.auth-form input[type=email]::placeholder, .auth-form input[type=password]::placeholder {\\n  color: rgb(200, 200, 200);\\n}\\n\\n.auth-form input[type=submit] {\\n  width: 100%;\\n}\\n\\n.auth-help {\\n  position: relative;\\n  margin-top: 20px;\\n}\\n\\n.auth-help a {\\n  color: rgb(54, 105, 203);\\n}\\n\\n.auth-help a:hover {\\n  color: rgb(54, 105, 203);\\n  text-decoration: underline;\\n}\\n\\n.reset-main {\\n  width: 100%;\\n  height: 100%;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n}\\n\\n.reset-overlay {\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.reset-content {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  text-align: center;\\n  padding: 20px;\\n}\\n\\n.reset-content h1 {\\n  margin-bottom: 30px;\\n  line-height: 1;\\n}\\n\\n.reset-info {\\n  position: relative;\\n  margin-bottom: 43px;\\n}\\n\\n.reset-info-error {\\n  color: rgb(154, 73, 69);\\n}\\n\\n.reset-info-success {\\n  color: rgb(69, 154, 83);\\n}\\n\\n.reset-form {\\n  position: relative;\\n}\\n\\n.reset-form input[type=email], .reset-form input[type=password] {\\n  color: rgb(150, 150, 150);\\n  background-color: rgb(50, 50, 50);\\n}\\n\\n.reset-form input[type=email]::placeholder, .reset-form input[type=password]::placeholder {\\n  color: rgb(200, 200, 200);\\n}\\n\\n.reset-form input[type=submit] {\\n  width: 100%;\\n}\\n\\n.admin-tabs {\\n  margin-top: 23px;\\n}\\n\\n.admin-tabs a {\\n  color: rgb(200, 200, 200);\\n}\\n\\n.admin-tabs a:hover {\\n  color: rgb(230, 230, 230);\\n  border-bottom-color: rgb(111, 172, 243);\\n}\\n\\n.admin-environment {\\n  position: relative;\\n}\\n\\n.admin-environment h2 {\\n  margin-top: 20px;\\n  margin-bottom: 10px;\\n}\\n\\n.admin-environment label, .admin-environment span {\\n  color: rgb(150, 150, 150);\\n}\\n\\n.admin-environment input, .admin-environment select {\\n  color: rgb(150, 150, 150);\\n  background-color: rgb(50, 50, 50);\\n}\\n\\n.admin-media {\\n  position: relative;\\n  width: 100%;\\n}\\n\\n.admin-media h2 {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n}\\n\\n.admin-media label {\\n  color: rgb(150, 150, 150);\\n}\\n\\n.admin-media input {\\n  color: rgb(150, 150, 150);\\n  background-color: rgb(50, 50, 50);\\n}\\n\\n.admin-media input[type=submit] {\\n  margin-top: 10px;\\n  margin-bottom: 20px;\\n}\\n\\n.admin-users {\\n  position: relative;\\n  width: 100%;\\n}\\n\\n.admin-users h2 {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n}\\n\\n.admin-users-list {\\n  position: relative;\\n}\\n\\n.admin-user-account {\\n  position: relative;\\n  margin-bottom: 15px;\\n}\\n\\n.admin-user-account label, .admin-user-account span {\\n  color: rgb(150, 150, 150);\\n}\\n\\n.admin-user-account input, .admin-user-account select {\\n  color: rgb(150, 150, 150);\\n  background-color: rgb(50, 50, 50);\\n}\\n\\n.admin-user-account-item {\\n  position: relative;\\n  display: inline-block;\\n  margin-left: 5px;\\n  margin-right: 5px;\\n}\\n\\n.admin-user-account-item-input {\\n  width: 30%;\\n}\\n\\n.admin-user-account-actions {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n.admin-user-account-item-centered {\\n  text-align: center;\\n}\\n\\n.admin-user-account-action-item {\\n  position: relative;\\n}\\n\\n.admin-users-actions {\\n  position: relative;\\n  margin-top: 20px;\\n}\\n\\n.admin-locations {\\n  position: relative;\\n  width: 100%;\\n}\\n\\n.admin-locations h2 {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n}\\n\\n.admin-locations-list {\\n  position: relative;\\n}\\n\\n.admin-location {\\n  position: relative;\\n  margin-bottom: 15px;\\n}\\n\\n.admin-location label, .admin-location span {\\n  color: rgb(150, 150, 150);\\n}\\n\\n.admin-location input {\\n  color: rgb(150, 150, 150);\\n  background-color: rgb(50, 50, 50);\\n}\\n\\n.admin-location-item {\\n  position: relative;\\n  display: inline-block;\\n  margin-left: 5px;\\n  margin-right: 5px;\\n}\\n\\n.admin-location-item-input {\\n  width: 30%;\\n}\\n\\n.admin-location-actions {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n.admin-location-item-centered {\\n  text-align: center;\\n}\\n\\n.admin-location-action-item {\\n  position: relative;\\n}\\n\\n.admin-locations-actions {\\n  position: relative;\\n  margin-top: 20px;\\n}\\n\\n.admin-mail {\\n  position: relative;\\n}\\n\\n.admin-mail h2 {\\n  margin-top: 20px;\\n  margin-bottom: 10px;\\n}\\n\\n.admin-mail label, .admin-mail span {\\n  color: rgb(150, 150, 150);\\n}\\n\\n.admin-mail input, .admin-mail select {\\n  color: rgb(150, 150, 150);\\n  background-color: rgb(50, 50, 50);\\n}\\n\\n.admin-info {\\n  position: relative;\\n}\\n\\n.admin-info-version {\\n  color: rgb(200, 200, 200);\\n  font-size: 1.5em;\\n}\\n\\n.admin-info-version-smaller {\\n  color: rgb(150, 150, 150);\\n  font-size: 0.76em;\\n}\\n\\n.version-check {\\n  position: relative;\\n  margin-top: 30px;\\n}\\n\\n.version-info {\\n  position: relative;\\n  padding: 20px;\\n  margin-top: 30px;\\n  color: rgb(250, 250, 250);\\n  background-color: rgba(102, 202, 160, 0.76);\\n  border: 1px solid rgb(150, 236, 200);\\n  border-radius: 10px;\\n}\\n\\n.version-info a {\\n  color: rgb(132, 255, 123);\\n  font-weight: bold;\\n}\\n\\n.version-info a:hover {\\n  color: rgb(132, 255, 123);\\n  text-decoration: underline;\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://asatruphp/./app/resources/sass/app.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://asatruphp/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./app/resources/sass/app.scss":
/*!*************************************!*\
  !*** ./app/resources/sass/app.scss ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var api = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./app.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./app/resources/sass/app.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};\n\n//# sourceURL=webpack://asatruphp/./app/resources/sass/app.scss?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://asatruphp/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/axios/dist/browser/axios.cjs":
/*!***************************************************!*\
  !*** ./node_modules/axios/dist/browser/axios.cjs ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Axios v1.6.2 Copyright (c) 2023 Matt Zabriskie and contributors\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n};\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : __webpack_require__.g)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  };\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n};\n\nconst noop = () => {};\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n};\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n};\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0];\n  }\n\n  return str;\n};\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  };\n\n  return visit(obj, 0);\n};\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nvar utils$1 = {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils$1.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils$1.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype$1 = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype$1, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype$1);\n\n  utils$1.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n// eslint-disable-next-line strict\nvar httpAdapter = null;\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils$1.isPlainObject(thing) || utils$1.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils$1.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils$1.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils$1.toFlatObject(utils$1, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils$1.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils$1.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);\n\n  if (!utils$1.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils$1.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils$1.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils$1.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils$1.isArray(value) && isFlatArray(value)) ||\n        ((utils$1.isFileList(value) || utils$1.endsWith(key, '[]')) && (arr = utils$1.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils$1.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils$1.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils$1.forEach(value, function each(el, key) {\n      const result = !(utils$1.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils$1.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode$1(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode$1);\n  } : encode$1;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils$1.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils$1.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nvar InterceptorManager$1 = InterceptorManager;\n\nvar transitionalDefaults = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n\nvar URLSearchParams$1 = typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n\nvar FormData$1 = typeof FormData !== 'undefined' ? FormData : null;\n\nvar Blob$1 = typeof Blob !== 'undefined' ? Blob : null;\n\nvar platform$1 = {\n  isBrowser: true,\n  classes: {\n    URLSearchParams: URLSearchParams$1,\n    FormData: FormData$1,\n    Blob: Blob$1\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  hasBrowserEnv: hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv: hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv: hasStandardBrowserEnv\n});\n\nvar platform = {\n  ...utils,\n  ...platform$1\n};\n\nfunction toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils$1.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils$1.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils$1.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils$1.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils$1.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils$1.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils$1.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils$1.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils$1.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils$1.isObject(data);\n\n    if (isObjectPayload && utils$1.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils$1.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils$1.isArrayBuffer(data) ||\n      utils$1.isBuffer(data) ||\n      utils$1.isStream(data) ||\n      utils$1.isFile(data) ||\n      utils$1.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils$1.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils$1.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils$1.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils$1.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils$1.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nvar defaults$1 = defaults;\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils$1.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nvar parseHeaders = rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils$1.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils$1.isString(value)) return;\n\n  if (utils$1.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils$1.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils$1.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils$1.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils$1.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils$1.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if(utils$1.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils$1.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils$1.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils$1.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils$1.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils$1.forEach(this, (value, header) => {\n      const key = utils$1.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils$1.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils$1.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils$1.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils$1.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils$1.freezeMethods(AxiosHeaders);\n\nvar AxiosHeaders$1 = AxiosHeaders;\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || defaults$1;\n  const context = response || config;\n  const headers = AxiosHeaders$1.from(context.headers);\n  let data = context.data;\n\n  utils$1.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils$1.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\nvar cookies = platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils$1.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils$1.isString(path) && cookie.push('path=' + path);\n\n      utils$1.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\nvar isURLSameOrigin = platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils$1.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nvar xhrAdapter = isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders$1.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils$1.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders$1.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils$1.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils$1.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils$1.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n};\n\nutils$1.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils$1.isFunction(adapter) || adapter === null || adapter === false;\n\nvar adapters = {\n  getAdapter: (adapters) => {\n    adapters = utils$1.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n};\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders$1.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders$1.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders$1.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {\n      return utils$1.merge.call({caseless}, target, source);\n    } else if (utils$1.isPlainObject(source)) {\n      return utils$1.merge({}, source);\n    } else if (utils$1.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils$1.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils$1.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\nconst VERSION = \"1.6.2\";\n\nconst validators$1 = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators$1[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators$1.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nvar validator = {\n  assertOptions,\n  validators: validators$1\n};\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager$1(),\n      response: new InterceptorManager$1()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils$1.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils$1.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils$1.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils$1.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils$1.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nvar Axios$1 = Axios;\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nvar CancelToken$1 = CancelToken;\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return utils$1.isObject(payload) && (payload.isAxiosError === true);\n}\n\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nvar HttpStatusCode$1 = HttpStatusCode;\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios$1(defaultConfig);\n  const instance = bind(Axios$1.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils$1.extend(instance, Axios$1.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils$1.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults$1);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios$1;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken$1;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders$1;\n\naxios.formToJSON = thing => formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode$1;\n\naxios.default = axios;\n\nmodule.exports = axios;\n//# sourceMappingURL=axios.cjs.map\n\n\n//# sourceURL=webpack://asatruphp/./node_modules/axios/dist/browser/axios.cjs?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./app/resources/js/app.js");
/******/ 	
/******/ })()
;